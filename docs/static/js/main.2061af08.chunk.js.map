{"version":3,"sources":["components/LikeButton.tsx","components/MyLabel.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["LikeButton","children","useState","count","setCount","className","onClick","MyLabel","message","App","messageId","setMessageId","useEffect","location","buttonText","cookieName","style","background","buttonStyle","color","fontSize","expires","overlay","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAMaA,EAAa,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAyB,EAC1BC,mBAAS,KADiB,mBAC7CC,EAD6C,KACtCC,EADsC,KAKpD,OACE,qCACE,yBAAQC,UAAU,aAAaC,QALf,WAClBF,EAASD,EAAQ,IAIf,oBAA2DA,KACzDF,MCVKM,EAAU,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,QACxB,OAAO,4BAAKA,K,MCmDCC,MAjDf,WAAgB,IAAD,EACaP,mBAAS,GADtB,mBACNC,EADM,KACCC,EADD,OAEqBF,mBAAS,GAF9B,mBAENQ,EAFM,KAEKC,EAFL,KAkBb,OAbAC,qBAAU,WAEFT,EAAQ,GACVC,EAAS,KAIZ,CAACD,IAOF,qBAAKE,UAAU,MAAf,SACE,iCACE,yBAASA,UAAU,aAAnB,SACE,cAAC,EAAD,MAGF,0BAASA,UAAU,mBAAnB,UACE,wBAAQC,QAZM,WACFK,EAAJ,IAAdD,EAA+B,EAAkB,IAW3C,mBACA,cAAC,EAAD,CAASF,QAxBA,CAAC,WAAY,YAwBME,QAG9B,yBAASL,UAAU,qBAAnB,SACE,eAAC,IAAD,CACEQ,SAAS,SACTC,WAAW,aACXC,WAAW,oBACXC,MAAO,CAAEC,WAAY,WACrBC,YAAa,CAAEC,MAAO,UAAWC,SAAU,QAC3CC,QAAS,IACTC,SAAO,EAPT,sEAS4D,IAC1D,sBAAMN,MAAO,CAAEI,SAAU,QAAzB,uDClCGG,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2061af08.chunk.js","sourcesContent":["import { useState } from \"react\";\n\ntype PropType = {\n  children?: any\n}\n\nexport const LikeButton = ({ children }: PropType) => {\n  const [count, setCount] = useState(999);\n  const handleClick = () => {\n    setCount(count + 1);\n  };\n  return (\n    <>\n      <button className=\"likeButton\" onClick={ handleClick }>â™¥ { count }</button>\n      { children }\n    </>\n  );\n}\n","type PropType = {\n  message: string;\n}\n\nexport const MyLabel = ({ message }: PropType) => {\n  return <p>{ message }</p>\n}","import { useState, useEffect } from \"react\";\nimport CookieConsent from 'react-cookie-consent';\n\nimport { LikeButton } from \"./components/LikeButton\"\nimport { MyLabel } from \"./components/MyLabel\";\nimport \"./App.css\";\n\nfunction App() {\n  const [count, setCount] = useState(0);\n  const [messageId, setMessageId] = useState(0);\n  const messages = ['hogehoge', 'fugafuga'];\n\n  useEffect(() => {\n    const reset = () => {\n      if (count > 5) {\n        setCount(0);\n      }\n    };\n    reset();\n  }, [count]);\n\n  const toggleMessage = () => {\n    messageId === 0 ? setMessageId(1) : setMessageId(0);\n  }\n\n  return (\n    <div className=\"App\">\n      <main>\n        <section className=\"App-header\">\n          <LikeButton />\n        </section>\n\n        <section className=\"App-main-message\">\n          <button onClick={ toggleMessage }>click</button>\n          <MyLabel message={ messages[messageId] } />\n        </section>\n\n        <section className=\"App-cookie-consent\">\n          <CookieConsent\n            location=\"bottom\"\n            buttonText=\"Sure man!!\"\n            cookieName=\"cookie-use-accept\"\n            style={{ background: \"#2B373B\" }}\n            buttonStyle={{ color: \"#4e503b\", fontSize: \"13px\" }}\n            expires={150}\n            overlay\n          >\n            This website uses cookies to enhance the user experience.{\" \"}\n            <span style={{ fontSize: \"10px\" }}>This bit of text is smaller :O</span>\n          </CookieConsent>\n        </section>\n      </main>\n    </div>\n  );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}